% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/covlmc_likelihood.R
\name{loglikelihood.covlmc}
\alias{loglikelihood.covlmc}
\title{Log-Likelihood of a VLMC with covariates}
\usage{
\method{loglikelihood}{covlmc}(
  vlmc,
  initial = c("truncated", "specific", "extended"),
  newdata,
  newcov,
  ...
)
}
\arguments{
\item{vlmc}{the covlmc representation.}

\item{initial}{specifies the likelihood function, more precisely the way the
first few observations for which contexts cannot be calculated are integrated
in the likelihood. See below for details.}

\item{newdata}{an optional discrete time series.}

\item{newcov}{an optional data frame with the new values for the covariates.}

\item{...}{additional parameters for loglikelihood.}
}
\value{
an object of class \code{logLikMixVLMC} and \code{logLik}. This is a number,
the log-likelihood of the (CO)VLMC with the following attributes:
\itemize{
\item \code{df}: the number of parameters used by the VLMC for this likelihood calculation
\item \code{nobs}: the number of observations included in this likelihood calculation
\item \code{initial}: the value of the \code{initial} parameter used to compute this likelihood
}
}
\description{
This function evaluates the log-likelihood of a VLMC with covariates fitted
on a discrete time series. When the optional arguments \code{newdata} is
provided, the function evaluates instead the log-likelihood for this (new)
discrete time series on the new covariates which must be provided through the
\code{newcov} parameter.
}
\details{
The definition of the likelihood function depends on the value of the
\code{initial} parameters, see the section below as well as the dedicated
vignette: \code{vignette("likelihood", package = "mixvlmc")}.
}
\section{likelihood calculation}{


In a (CO)VLMC of \code{\link[=depth]{depth()}}=k, we need k past values in order to compute the
context of a given observation. As a consequence, in a time series \code{x}, the
contexts of \code{x[1]} to \code{x[k]} are unknown. Depending on the value of \code{initial}
different likelihood functions are used to tackle this difficulty:
\itemize{
\item \code{initial=="truncated"} (default): the likelihood is computed using only
\code{x[(k+1):length(x)]}
\item \code{initial=="specific"}: the likelihood is computed on the full time series
using a specific context for the initial values, \code{x[1]} to \code{x[k]}. Each of
the specific context is unique, leading to a perfect likelihood of 1 (0 in
log scale). Thus the numerical value of the likelihood is identical as the
one obtained with \code{initial=="truncated"} but it is computed on \code{length(x)}
with a model with more parameters than in this previous case.
\item \code{initial=="relaxed"}: the likelihood is computed on the full time series
using a relaxed context matching for the initial values, \code{x[1]} to \code{x[k]}.
This can be seen as a compromised between the two other possibilities:
the relaxed context matching needs in general to turn internal nodes
of the context tree into actual context, increasing the number of parameters,
but not as much as with "specific". However, the likelihood of say \code{x[1]}
with an empty context is generally not 1 and thus the full likelihood is
smaller than the one computed with "specific".
}

See the dedicated vignette for a more mathematically oriented discussion:
\code{vignette("likelihood", package = "mixvlmc")}.
}

\examples{

## Likelihood for a fitted VLMC with covariates.
pc <- powerconsumption[powerconsumption$week == 5, ]
breaks <- c(
  0,
  median(powerconsumption$active_power, na.rm = TRUE),
  max(powerconsumption$active_power, na.rm = TRUE)
)
labels <- c(0, 1)
dts <- cut(pc$active_power, breaks = breaks, labels = labels)
dts_cov <- data.frame(day_night = (pc$hour >= 7 & pc$hour <= 17))
m_cov <- covlmc(dts, dts_cov, min_size = 5)
ll <- loglikelihood(m_cov)
ll
attr(ll, "nobs")

## Likelihood for new time series and covariates with previously
## fitted VLMC with covariates
pc_new <- powerconsumption[powerconsumption$week == 11, ]
dts_new <- cut(pc_new$active_power, breaks = breaks, labels = labels)
dts_cov_new <- data.frame(day_night = (pc_new$hour >= 7 & pc_new$hour <= 17))
ll_new <- loglikelihood(m_cov, newdata = dts_new, newcov = dts_cov_new)
ll_new
attributes(ll_new)

}
\seealso{
\code{\link[stats:logLik]{stats::logLik()}}
}
