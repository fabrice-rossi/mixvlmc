% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctx_tree_draw.R
\name{draw_control}
\alias{draw_control}
\title{Control parameters for \code{draw}}
\usage{
draw_control(
  digits = 4,
  charset = NULL,
  orientation = c("vertical", "horizontal"),
  tabular = TRUE,
  tab_orientation = c("vertical", "horizontal"),
  decoration = c("none", "rectangle", "circle", "ellipse"),
  fontsize = "normalsize",
  prob_fontsize = "small"
)
}
\arguments{
\item{digits}{numerical parameters and p-values are represented using the
\code{\link[base:Round]{base::signif()}} function, using the number of significant digits specified
with this parameter (defaults to 4).}

\item{charset}{specifies the characters used for the "ascii art" represention
when the format is "text", see details.}

\item{orientation}{specifies the global orientation of the tree, either
"vertical" (default) or "horizontal" ("latex").}

\item{tabular}{if TRUE (default value), the "latex" format will use tables
for each node, with one row for the state value and other rows for
additional information (such as the conditional probability associated to
the context). Notice that \code{\link[=draw.covlmc]{draw.covlmc()}} always uses tables regardless
of the value of \code{tabular}.}

\item{tab_orientation}{specifies the way the models are represented when used
by \code{\link[=draw.covlmc]{draw.covlmc()}} ("latex"). The default value is \code{"vertical"}: this is
well adapted to models with long covariate dependencies (see
\code{covariate_depth()}). The other possible value is \code{"horizontal"}.}

\item{decoration}{specifies node decoration in the "latex" format, see
details.}

\item{fontsize}{font size for the state names in the "latex" format (using
latex standard font size, default to \code{"normalsize"}).}

\item{prob_fontsize}{font size for the context counts, probabilities or
models in the "latex" format (using latex standard font size, defaults to
\code{"small"}).}
}
\value{
a list
}
\description{
This function returns a list used to fine tune the \code{\link[=draw]{draw()}} function
behaviour.
}
\details{
Parameters are generally specific to the \code{format} used for \code{\link[=draw]{draw()}}. If this
is the case, the format is given at the end of the parameter description.
Some parameters are also specific to some functions inheriting from \code{\link[=draw]{draw()}}.
}
\section{Decoration}{


The LaTeX format (\code{"latex"}) can "decorate" the nodes of the context tree
by drawing borders. We support only basic decorations, but in theory all
TikZ possibilities could be used (see the documentation of the \href{https://ctan.org/pkg/forest}{forest LaTeX package}). Supported decorations:
\itemize{
\item \code{"none"}: default, no decoration;
\item \code{"rectangle"}: adds a rectangular border to all nodes;
\item \code{"circle"}: adds a circular border to all nodes;
\item \code{"ellipse"}: adds an ellipsoidal border to all nodes.
}
}

\section{Charset}{


The "ascii art" format (\code{"text"}) uses a collection of characters to
display a context tree. The default collection is specified by the
package option \code{"mixvlmc.charset"} and is used when \code{charset=NULL} (default
value). If \code{charset} is set to a character value, this value is used to
select the collection in the same way that \code{"mixvlmc.charset"} specifies
it:
\itemize{
\item \code{"ascii"}: the collection uses only standard ASCII characters and
should be compatible with all environments;
\item \code{"utf8"}: the collection uses UTF-8 symbols and needs a compatible display.
}

Finally, \code{charset} can a user supplied list of characters as the one returned
by \code{\link[=charset_ascii]{charset_ascii()}} and \code{\link[=charset_utf8]{charset_utf8()}}.
}

\examples{
draw_control(digits = 2, tabular = FALSE)
}
\seealso{
\code{\link[=draw]{draw()}}, \code{\link[=charset_ascii]{charset_ascii()}} and \code{\link[=charset_utf8]{charset_utf8()}}.
}
